{"version":3,"file":"component---src-pages-blog-js-d365b489f49147cd64c4.js","mappings":"yKAqBA,G,QAVY,WACV,OACE,gBAAC,WAAD,KACE,uBAAKA,UCbY,gCDajB,+D,wHEVOC,EAAO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACE,sBAAIC,IAAKF,EAAKG,OAAOC,MACnB,2BACEN,UAAU,iBACVO,WAAS,EACTC,SAAS,6BAET,8BACE,yBAAOR,UCZC,4BDYiBE,EAAKO,YAAYC,MAC1C,sBAAIV,UCXS,iCDYX,gBAAC,EAAAW,KAAD,CAAMC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYV,SE0BzC,EAjCkB,SAAC,GAAwB,IAAD,EAArBW,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBf,QAAxB,QACZgB,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQP,SAAUA,EAAUZ,MAAOa,GACjC,gBAAC,IAAD,CAAKb,MAAM,SACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQoB,UAAQ,EAACR,SAAUA,EAAUZ,MAAOa,GAC1C,gBAAC,IAAD,CAAKb,MAAM,SACX,gBAAC,IAAD,MACA,sBAAIH,UC9BQ,4BD+BTmB,EAAMK,KAAI,SAACtB,GACV,IAAMC,EAAQD,EAAKO,YAAYN,OAASD,EAAKG,OAAOC,KAEpD,OAAO,gBAACL,EAAD,CAAMC,KAAMA,EAAMC,MAAOA","sources":["webpack://ricca509.github.io/./src/components/bio/index.js","webpack://ricca509.github.io/./src/components/bio/bio.module.css","webpack://ricca509.github.io/./src/components/post/Post.js","webpack://ricca509.github.io/./src/components/post/post.module.css","webpack://ricca509.github.io/./src/pages/blog.js","webpack://ricca509.github.io/./src/pages/blog.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { container } from \"./bio.module.css\";\n\nconst Bio = () => {\n  return (\n    <React.Fragment>\n      <div className={container}>\n        Notes on web development, life, learning and the world.\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var container = \"bio-module--container--ohZR0\";","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { postTitle, postDescription, date } from \"./post.module.css\";\n\nexport const Post = ({ post, title }) => {\n  return (\n    <li key={post.fields.slug}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <small className={date}>{post.frontmatter.date}</small>\n          <h2 className={postTitle}>\n            <Link to={post.fields.slug} itemProp=\"url\">\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n        </header>\n        {/* <section>\n          <p\n            className={postDescription}\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section> */}\n      </article>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var date = \"post-module--date--0qLt2\";\nexport var postDescription = \"post-module--postDescription--Inuok\";\nexport var postTitle = \"post-module--postTitle--P7aYp\";","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { Post } from \"../components/post/Post\";\nimport { list } from \"./blog.module.css\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Blog\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout showName location={location} title={siteTitle}>\n      <Seo title=\"Blog\" />\n      <Bio />\n      <ol className={list}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return <Post post={post} title={title} />;\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { slug: { glob: \"**/blog/*\" } }\n        frontmatter: { publication_status: { eq: \"published\" } }\n      }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var list = \"blog-module--list--rOrp8\";"],"names":["className","Post","post","title","key","fields","slug","itemScope","itemType","frontmatter","date","Link","to","itemProp","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","showName","map"],"sourceRoot":""}