{"version":3,"file":"component---src-pages-blog-tsx-5a07f5a972ce7f52ad92.js","mappings":"2KAkBA,EARY,WACV,OACEA,EAAAA,cAAAA,MAAAA,CAAKC,UCXc,gCDWnB,6D,wHEOSC,EAA4B,SAAC,GAAqB,IAAD,MAAlBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAChD,OACEJ,EAAAA,cAAAA,KAAAA,CAAIK,IAAKF,MAAAA,GAAF,UAAEA,EAAMG,cAAR,aAAEC,EAAcC,MACrBR,EAAAA,cAAAA,UAAAA,CACEC,UAAU,iBACVQ,WAAS,EACTC,SAAS,6BAETV,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,CAAOC,UC3BC,4BD2BiBE,MAAAA,GAAzB,UAAyBA,EAAMQ,mBAA/B,aAAyBC,EAAmBC,MAC5Cb,EAAAA,cAAAA,KAAAA,CAAIC,UC1BS,iCD2BXD,EAAAA,cAACc,EAAAA,KAAD,CAAMC,IAAIZ,MAAAA,GAAA,QAAAA,EAAAA,EAAMG,cAAN,WAAAH,EAAA,EAAcK,OAAQ,QAASQ,SAAS,OAChDhB,EAAAA,cAAAA,OAAAA,CAAMgB,SAAS,YAAYZ,SEUzC,EA/BuD,SAAC,GAAwB,IAAD,IAArBa,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxDC,GAAYF,MAAAA,GAAA,QAAAA,EAAAA,EAAMG,YAAN,mBAAYC,oBAAZ,WAAAJ,EAAA,EAA0Bb,QAA1B,OACZkB,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENzB,EAAAA,cAAC0B,EAAAA,EAAD,CAAQR,SAAUA,EAAUd,MAAOe,GACjCnB,EAAAA,cAAC2B,EAAAA,EAAD,CAAKvB,MAAM,SACXJ,EAAAA,cAAC4B,EAAAA,EAAD,MACA5B,EAAAA,cAAAA,IAAAA,KAAAA,+BAMJA,EAAAA,cAAC0B,EAAAA,EAAD,CAAQG,UAAQ,EAACX,SAAUA,EAAUd,MAAOe,GAC1CnB,EAAAA,cAAC2B,EAAAA,EAAD,CAAKvB,MAAM,SACXJ,EAAAA,cAAC4B,EAAAA,EAAD,MACA5B,EAAAA,cAAAA,KAAAA,CAAIC,UC3BQ,4BD4BTqB,EAAMQ,KAAI,SAAC3B,GAAU,IAAD,MACbC,GAAQD,MAAAA,GAAA,QAAAA,EAAAA,EAAMQ,mBAAN,WAAAR,EAAA,EAAmBC,SAASD,MAAAA,GAA5B,UAA4BA,EAAMG,cAAlC,aAA4BC,EAAcC,MAExD,OACER,EAAAA,cAACE,EAAD,CAAMC,KAAMA,EAAMC,MAAOA,GAAS,GAAIC,IAAG,UAAEF,EAAKG,cAAP,aAAEyB,EAAavB","sources":["webpack://ricca509.github.io/./src/components/Bio/index.tsx","webpack://ricca509.github.io/./src/components/Bio/Bio.module.css","webpack://ricca509.github.io/./src/components/Post/Post.tsx","webpack://ricca509.github.io/./src/components/Post/Post.module.css","webpack://ricca509.github.io/./src/pages/blog.tsx","webpack://ricca509.github.io/./src/pages/blog.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { container } from \"./Bio.module.css\";\n\nconst Bio = () => {\n  return (\n    <div className={container}>\n      Notes on web development, life, learning and the world.\n    </div>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var container = \"Bio-module--container--CTV0B\";","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { postTitle, date } from \"./Post.module.css\";\n\ninterface Post {\n  excerpt?: string | null;\n  fields?: { slug?: string | null } | null;\n  frontmatter?: {\n    date?: any | null;\n    title?: string | null;\n    description?: string | null;\n  } | null;\n}\n\ninterface PostProps {\n  title: string;\n  post: Post;\n}\n\nexport const Post: React.FC<PostProps> = ({ post, title }) => {\n  return (\n    <li key={post?.fields?.slug}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <small className={date}>{post?.frontmatter?.date}</small>\n          <h2 className={postTitle}>\n            <Link to={post?.fields?.slug || \"/blog\"} itemProp=\"url\">\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n        </header>\n      </article>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var date = \"Post-module--date--9cLgl\";\nexport var postDescription = \"Post-module--postDescription--D-tma\";\nexport var postTitle = \"Post-module--postTitle--T9cR2\";","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { BlogIndexQuery } from \"../../graphql-types\";\n\nimport Bio from \"../components/Bio\";\nimport { Layout } from \"../components/Layout/Layout\";\nimport { Seo } from \"../components/Seo/Seo\";\nimport { Post } from \"../components/Post/Post\";\nimport { list } from \"./blog.module.css\";\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({ data, location }) => {\n  const siteTitle = data?.site?.siteMetadata?.title || `Blog`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Blog\" />\n        <Bio />\n        <p>Oops, No blog posts found!</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout showName location={location} title={siteTitle}>\n      <Seo title=\"Blog\" />\n      <Bio />\n      <ol className={list}>\n        {posts.map((post) => {\n          const title = post?.frontmatter?.title || post?.fields?.slug;\n\n          return (\n            <Post post={post} title={title || \"\"} key={post.fields?.slug} />\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { slug: { glob: \"**/blog/*\" } }\n        frontmatter: { publication_status: { eq: \"published\" } }\n      }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var list = \"blog-module--list--rOrp8\";"],"names":["React","className","Post","post","title","key","fields","_post$fields","slug","itemScope","itemType","frontmatter","_post$frontmatter","date","Link","to","itemProp","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","Layout","Seo","Bio","showName","map","_post$fields2"],"sourceRoot":""}