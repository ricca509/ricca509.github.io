{"version":3,"file":"component---src-pages-blog-tsx-73361888cbd330300bc2.js","mappings":"0KAkBA,MARYA,IAERC,EAAAA,cAAAA,MAAAA,CAAKC,UCXc,gCDWQ,iG,yHEOxB,MAAMC,EAA4BC,IAAsB,IAAD,UAApB,KAAEC,EAAI,MAAEC,GAAO,EACvD,OACEL,EAAAA,cAAAA,KAAAA,CAAIM,IAAKF,SAAY,QAAR,EAAJA,EAAMG,cAAM,WAAR,EAAJC,EAAcC,MACrBT,EAAAA,cAAAA,UAAAA,CAASU,WAAS,EAACC,SAAS,6BAC1BX,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,CAAOC,UCvBC,4BDuBiBG,SAAiB,QAAb,EAAJA,EAAMQ,mBAAW,WAAb,EAAJC,EAAmBC,MAC5Cd,EAAAA,cAAAA,KAAAA,CAAIC,UCtBS,iCDuBXD,EAAAA,cAACe,EAAAA,KAAI,CAACC,IAAIZ,SAAY,QAAR,EAAJA,EAAMG,cAAM,WAAR,EAAJU,EAAcR,OAAQ,QAASS,SAAS,OAChDlB,EAAAA,cAAAA,OAAAA,CAAMkB,SAAS,YAAYb,OAKhC,EEeT,MArCuDF,IAAwB,gBAAvB,KAAEgB,EAAI,SAAEC,GAAU,EACxE,MAAMC,GAAYF,SAAU,QAAN,EAAJA,EAAMG,YAAI,OAAc,QAAd,EAAVC,EAAYC,oBAAY,WAApB,EAAJC,EAA0BpB,QAAS,OAC/CqB,EAAQP,EAAKQ,kBAAkBC,MAEb,QAAxB,OAAqB,IAAjBF,EAAMG,OAEN7B,EAAAA,cAAC8B,EAAAA,EAAM,CAACV,SAAUA,EAAUf,MAAOgB,GACjCrB,EAAAA,cAAC+B,EAAAA,EAAG,CACF1B,OAAOc,SAAU,QAAN,EAAJA,EAAMG,YAAI,OAAc,QAAd,EAAVU,EAAYR,oBAAY,WAApB,EAAJS,EAA0BC,cAAe,OAChDC,KAAK,YAEPnC,EAAAA,cAACD,EAAAA,EAAG,MACJC,EAAAA,cAAAA,IAAAA,KAAG,+BAMPA,EAAAA,cAAC8B,EAAAA,EAAM,CAACM,UAAQ,EAAChB,SAAUA,EAAUf,MAAOgB,GAC1CrB,EAAAA,cAAC+B,EAAAA,EAAG,CACF1B,OAAOc,SAAU,QAAN,EAAJA,EAAMG,YAAI,OAAc,QAAd,EAAVe,EAAYb,oBAAY,WAApB,EAAJc,EAA0BJ,cAAe,OAChDC,KAAK,YAEPnC,EAAAA,cAACD,EAAAA,EAAG,MACJC,EAAAA,cAAAA,KAAAA,CAAIC,UCjCQ,4BDkCTyB,EAAMa,KAAKnC,IAAS,UACnB,MAAMC,GAAQD,SAAiB,QAAb,EAAJA,EAAMQ,mBAAW,WAAb,EAAJC,EAAmBR,SAASD,SAAY,QAAR,EAAJA,EAAMG,cAAM,WAAR,EAAJC,EAAcC,MAExD,OACET,EAAAA,cAACE,EAAI,CAACE,KAAMA,EAAMC,MAAOA,GAAS,GAAIC,IAAgB,QAAb,EAAEF,EAAKG,cAAM,aAAXU,EAAaR,MAAQ,KAI/D,C","sources":["webpack://ricca509.github.io/./src/components/Bio/index.tsx","webpack://ricca509.github.io/./src/components/Bio/Bio.module.css","webpack://ricca509.github.io/./src/components/Post/Post.tsx","webpack://ricca509.github.io/./src/components/Post/Post.module.css","webpack://ricca509.github.io/./src/pages/blog.tsx","webpack://ricca509.github.io/./src/pages/blog.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { container } from \"./Bio.module.css\";\n\nconst Bio = () => {\n  return (\n    <div className={container}>\n\t\tReflections on thoughtful engineering and the systems that shape our work, life, and learning.\n    </div>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var container = \"Bio-module--container--09357\";","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { postTitle, date } from \"./Post.module.css\";\n\ninterface Post {\n  excerpt?: string | null;\n  fields?: { slug?: string | null } | null;\n  frontmatter?: {\n    date?: any | null;\n    title?: string | null;\n    description?: string | null;\n  } | null;\n}\n\ninterface PostProps {\n  title: string;\n  post: Post;\n}\n\nexport const Post: React.FC<PostProps> = ({ post, title }) => {\n  return (\n    <li key={post?.fields?.slug}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <header>\n          <small className={date}>{post?.frontmatter?.date}</small>\n          <h2 className={postTitle}>\n            <Link to={post?.fields?.slug || \"/blog\"} itemProp=\"url\">\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n        </header>\n      </article>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var date = \"Post-module--date--f5c2e\";\nexport var postDescription = \"Post-module--postDescription--0ffb6\";\nexport var postTitle = \"Post-module--postTitle--4fd71\";","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { BlogIndexQuery } from \"../../graphql-types\";\n\nimport Bio from \"../components/Bio\";\nimport { Layout } from \"../components/Layout/Layout\";\nimport { Seo } from \"../components/Seo/Seo\";\nimport { Post } from \"../components/Post/Post\";\nimport { list } from \"./blog.module.css\";\n\nconst BlogIndex: React.FC<PageProps<BlogIndexQuery>> = ({ data, location }) => {\n  const siteTitle = data?.site?.siteMetadata?.title || `Blog`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo\n          title={data?.site?.siteMetadata?.description || \"Blog\"}\n          type=\"article\"\n        />\n        <Bio />\n        <p>Oops, No blog posts found!</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout showName location={location} title={siteTitle}>\n      <Seo\n        title={data?.site?.siteMetadata?.description || \"Blog\"}\n        type=\"article\"\n      />\n      <Bio />\n      <ol className={list}>\n        {posts.map((post) => {\n          const title = post?.frontmatter?.title || post?.fields?.slug;\n\n          return (\n            <Post post={post} title={title || \"\"} key={post.fields?.slug} />\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { slug: { glob: \"**/blog/*\" } }\n        frontmatter: { publication_status: { eq: \"published\" } }\n      }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var list = \"blog-module--list--aceae\";"],"names":["Bio","React","className","Post","_ref","post","title","key","fields","_post$fields","slug","itemScope","itemType","frontmatter","_post$frontmatter","date","Link","to","_post$fields2","itemProp","data","location","siteTitle","site","_data$site","siteMetadata","_data$site$siteMetada","posts","allMarkdownRemark","nodes","length","Layout","Seo","_data$site2","_data$site2$siteMetad","description","type","showName","_data$site3","_data$site3$siteMetad","map"],"sourceRoot":""}