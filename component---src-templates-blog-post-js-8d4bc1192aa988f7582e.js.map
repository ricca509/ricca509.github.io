{"version":3,"file":"component---src-templates-blog-post-js-8d4bc1192aa988f7582e.js","mappings":"2KAqBA,G,QAVY,WACV,OACE,gBAAC,WAAD,KACE,uBAAKA,UCbY,gCDajB,+D,wHE4DN,EAlEyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAD,CACEC,UAAQ,EACRT,SAAUA,EACVM,MAAOH,EACPL,UCjBiB,sCDmBjB,gBAAC,IAAD,CACEQ,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,2BACEd,UAAU,YACVe,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIhB,UC3BK,iCD2BaiB,SAAS,YAC5Bd,EAAKS,YAAYJ,OAEpB,qBAAGR,UC/BK,iCD+BaG,EAAKS,YAAYM,OAExC,2BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKjB,UAAU,iBACb,sBACEsB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASG,YAAYJ,QAI9B,0BACGE,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKE,YAAYJ,MADpB","sources":["webpack://ricca509.github.io/./src/components/bio/index.js","webpack://ricca509.github.io/./src/components/bio/bio.module.css","webpack://ricca509.github.io/./src/templates/blog-post.js","webpack://ricca509.github.io/./src/templates/blog-post.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { container } from \"./bio.module.css\";\n\nconst Bio = () => {\n  return (\n    <React.Fragment>\n      <div className={container}>\n        Notes on web development, life, learning and the world.\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var container = \"bio-module--container--ohZR0\";","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { container, title, date } from \"./blog-post.module.css\";\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  return (\n    <Layout\n      showName\n      location={location}\n      title={siteTitle}\n      className={container}\n    >\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 className={title} itemProp=\"headline\">\n            {post.frontmatter.title}\n          </h1>\n          <p className={date}>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var container = \"blog-post-module--container--I0jV6\";\nexport var date = \"blog-post-module--date--Ytodg\";\nexport var title = \"blog-post-module--title--WafZ4\";"],"names":["className","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","showName","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}