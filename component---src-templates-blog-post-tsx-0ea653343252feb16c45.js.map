{"version":3,"file":"component---src-templates-blog-post-tsx-0ea653343252feb16c45.js","mappings":"yKAkBA,EARY,WACV,OACEA,EAAAA,cAAAA,MAAAA,CAAKC,UCXc,gCDWnB,6D,wHEkEJ,EArEmE,SAAC,GAGxD,IAAD,EAFTC,EAES,EAFTA,KACAC,EACS,EADTA,SAEMC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACEX,EAAAA,cAACY,EAAAA,EAAD,CACEC,UAAQ,EACRV,SAAUA,EACVM,MAAOH,EACPL,UCrBiB,qCDuBjBD,EAAAA,cAACc,EAAAA,EAAD,CACEL,MAAOL,EAAKW,YAAYN,MACxBO,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAEpDjB,EAAAA,cAAAA,UAAAA,CACEC,UAAU,YACViB,WAAS,EACTC,SAAS,6BAETnB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIoB,SAAS,YACVhB,EAAKW,YAAYN,OAEpBT,EAAAA,cAAAA,IAAAA,CAAGC,UCnCK,gCDmCaG,EAAKW,YAAYM,OAExCrB,EAAAA,cAAAA,UAAAA,CACEsB,wBAAyB,CAAEC,OAAQnB,EAAKoB,MACxCJ,SAAS,gBAEXpB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACyB,EAAAA,EAAD,QAGJzB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,KAAAA,CACE0B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX/B,EAAAA,cAAAA,KAAAA,KACGU,GACCV,EAAAA,cAACgC,EAAAA,KAAD,CAAMC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASK,YAAYN,QAI9BT,EAAAA,cAAAA,KAAAA,KACGW,GACCX,EAAAA,cAACgC,EAAAA,KAAD,CAAMC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKI,YAAYN,MADpB","sources":["webpack://ricca509.github.io/./src/components/Bio/index.tsx","webpack://ricca509.github.io/./src/components/Bio/Bio.module.css","webpack://ricca509.github.io/./src/templates/BlogPost.tsx","webpack://ricca509.github.io/./src/templates/BlogPost.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { container } from \"./Bio.module.css\";\n\nconst Bio = () => {\n  return (\n    <div className={container}>\n      Notes on web development, life, learning and the world.\n    </div>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var container = \"Bio-module--container--CTV0B\";","import * as React from \"react\";\nimport { Link, graphql, PageProps } from \"gatsby\";\n\nimport Bio from \"@Components/Bio\";\nimport { Layout } from \"@Components/Layout/Layout\";\nimport { Seo } from \"@Components/Seo/Seo\";\nimport { container, date } from \"./BlogPost.module.css\";\nimport { BlogPostBySlugQuery } from \"../../graphql-types\";\n\nconst BlogPostTemplate: React.FC<PageProps<BlogPostBySlugQuery>> = ({\n  data,\n  location,\n}: any) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  return (\n    <Layout\n      showName\n      location={location}\n      title={siteTitle}\n      className={container}\n    >\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">\n            {post.frontmatter.title}\n          </h1>\n          <p className={date}>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var container = \"BlogPost-module--container--1Jk04\";\nexport var date = \"BlogPost-module--date--esjRZ\";"],"names":["React","className","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","Layout","showName","Seo","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}