{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/dockerize-your-selenium-tests-to-run-everywhere-ii/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Riccardo Coppola"}},"markdownRemark":{"id":"ccd6ca38-c948-5b83-a06a-ede8dcaa1fa7","excerpt":"In the first part of this series, I presented a simple solution to run selenium based tests from inside a container, using Docker and Docker Compose. While this…","html":"<p>In the <a href=\"/blog/dockerize-your-selenium-tests-to-run-everywhere/\">first part</a> of this series, I presented a simple solution to run selenium based tests from inside a container, using <a href=\"https://www.docker.com/\">Docker</a> and <a href=\"https://docs.docker.com/compose/\">Docker Compose</a>.<br>\nWhile this solution serves the cause of orchestrating the Selenium server and the tests, it does not address more specific problems that would inevitably happen in a Continuous Integration environment.</p>\n<p>There are a few improvements than can be made:</p>\n<ul>\n<li>Prebuild the Docker image for better performances</li>\n<li>Specify dependencies among the containers to run the tests only when all the dependencies are ready (selenium, the app itself, …)</li>\n<li>Specify browser type/version</li>\n<li>Stop the containers when the tests are completed</li>\n<li>Report the right exit code to the CI when the Docker container ends its execution, in order to correctly mark the build</li>\n</ul>\n<h2 id=\"prebuild-the-docker-image\" style=\"position:relative;\"><a href=\"#prebuild-the-docker-image\" aria-label=\"prebuild the docker image permalink\" class=\"anchor before\"><svg height=\"20\" width=\"20\" viewBox=\"-32 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"/></svg></a>Prebuild the Docker image</h2>\n<p>This is what the <a href=\"https://github.com/ricca509/dockerize-webdriverio/blob/master/docker-compose.yml\">docker-compose.yml</a> file looked like in <a href=\"/dockerize-your-selenium-tests-to-run-everywhere/\">part I</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>host selenium\n  <span class=\"token key atrule\">links</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> selenium</code></pre></div>\n<p>I am changing the tests to point to a locally running application, so it needs to be running alongside the tests:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"># package.json\n\n...\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"start: \"</span>node src/index.js\"<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wdio wdio.conf\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...</code></pre></div>\n<p>To run it, another container can be added to the <code class=\"language-text\">docker-compose.yml</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm start\n\n<span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>host selenium\n  <span class=\"token punctuation\">...</span></code></pre></div>\n<p>Here I basically want to run two different commands from the same Docker image, but <em>it is being built twice now</em>.<br>\nThe solution to this problem is to pre-build the image and then run commands from it. This also makes the <code class=\"language-text\">docker-compose</code> file cleaner.</p>\n<p>To do this I’m going to use a small shell scripts that builds the image and then starts <code class=\"language-text\">docker-compose</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Starting Docker build\"</span>\n\n<span class=\"token assign-left variable\">DOCKER_IMAGE</span><span class=\"token operator\">=</span><span class=\"token string\">\"integration-tests:<span class=\"token variable\">${BUILD_COUNTER<span class=\"token operator\">:-</span>0}</span>\"</span>\n\n<span class=\"token function\">docker</span> build --rm -t <span class=\"token variable\">${DOCKER_IMAGE}</span> <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">docker-compose</span> up</code></pre></div>\n<ol>\n<li>I am declaring what the name of the image will be (note that I’m assuming that a <code class=\"language-text\">BUILD_COUNTER</code> env variable is available, in case it’s not it’ll fallback to zero).</li>\n<li>I’m building the image, tagging it with the name chosen in point 1. If the build is succesfull, the stack is started.</li>\n</ol>\n<p>With the image being built outside our Docker compose orchestration, the <code class=\"language-text\">docker-compose.yml</code> file can be updated:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm start\n\n<span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>host selenium\n  <span class=\"token punctuation\">...</span></code></pre></div>\n<p><em>NOTE: The <code class=\"language-text\">${BUILDCOUNTER:-0}</code> syntax allows to refer to an environment variable (<code class=\"language-text\">BUILDCOUNTER</code>) and in case it is not defined, Docker will fall back to <code class=\"language-text\">0</code>. Find more information about environment variables interpolation on the <a href=\"https://docs.docker.com/compose/environment-variables/\">Docker website</a>.</em></p>\n<p>Now two isolated containers are using the same image to run different commands.</p>\n<p>This is the <code class=\"language-text\">docker-compose.yml</code> file so far:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm start\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"3000\"</span>\n\n<span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>host selenium\n\n<span class=\"token key atrule\">selenium</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/standalone<span class=\"token punctuation\">-</span>chrome\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4444\"</span>\n  <span class=\"token key atrule\">log_driver</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span></code></pre></div>\n<h2 id=\"specify-dependencies-between-the-containers\" style=\"position:relative;\"><a href=\"#specify-dependencies-between-the-containers\" aria-label=\"specify dependencies between the containers permalink\" class=\"anchor before\"><svg height=\"20\" width=\"20\" viewBox=\"-32 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"/></svg></a>Specify dependencies between the containers</h2>\n<p>Another subtle problem that can arise as the number of independent containers increases, is managing the dependencies among them: what if the tests start before the Selenium server is ready, or before the mock server is listening?<br>\nThis may not happen every time, but it’s a problem that can seriously undermine the stability of our tests, and in turn our confidence in them.</p>\n<p>To define dependencies in a <code class=\"language-text\">docker-compose</code> file, <a href=\"https://docs.docker.com/compose/compose-file/#depends_on\"><code class=\"language-text\">depends_on</code></a> is the way to go.</p>\n<p>From the official Docker documentation, <code class=\"language-text\">depends_on</code>:</p>\n<blockquote>\n<p>Express dependency between services, which has two effects:</p>\n<ul>\n<li><code class=\"language-text\">docker-compose up</code> will start services in dependency order.</li>\n<li><code class=\"language-text\">docker-compose up SERVICE</code> will automatically include <code class=\"language-text\">SERVICE</code>’s dependencies.</li>\n</ul>\n</blockquote>\n<p>but also</p>\n<blockquote>\n<p>There are several things to be aware of when using <code class=\"language-text\">depends_on</code>:</p>\n<ul>\n<li><code class=\"language-text\">depends_on</code> will not wait for the dependencies to be “ready” before<br>\nstarting <code class=\"language-text\">SERVICE</code> - only until they have been started. If you need to wait for a service to be ready, see <a href=\"https://docs.docker.com/compose/startup-order\">Controlling startup order</a> for more on this problem and strategies for solving it.</li>\n<li>Version 3 no longer supports the <code class=\"language-text\">condition</code> form of <code class=\"language-text\">depends_on</code>.</li>\n<li>The <code class=\"language-text\">depends_on</code> option is ignored when <a href=\"/engine/reference/commandline/stack_deploy.md\">deploying a stack in swarm mode</a> with a version 3 Compose file.</li>\n</ul>\n</blockquote>\n<p>With this in mind, the configuration can be improved like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm start\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"3000\"</span>\n\n<span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>host selenium\n  <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> selenium\n    <span class=\"token punctuation\">-</span> app.local\n\n<span class=\"token key atrule\">selenium</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/standalone<span class=\"token punctuation\">-</span>chrome\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4444\"</span>\n  <span class=\"token key atrule\">log_driver</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span></code></pre></div>\n<p>Now the <code class=\"language-text\">tests</code> container will wait until <code class=\"language-text\">app.local</code> and <code class=\"language-text\">selenium</code> have been started.</p>\n<p>This, though, doesn’t mean that the services are ready and listening. The “readiness” of the service is specific to every application, so Docker cannot help here: <a href=\"https://github.com/vishnubob/wait-for-it\">wait-for-it</a> can.</p>\n<blockquote>\n<p><code class=\"language-text\">wait-for-it.sh</code> is a pure bash script that will wait on the availability of a host and TCP port. It is useful for synchronizing the spin-up of interdependent services, such as linked docker containers.</p>\n</blockquote>\n<p>With <code class=\"language-text\">wait-for-it</code> the <code class=\"language-text\">docker-compose.yml</code> becomes:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./wait-for-it.sh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"selenium:4444\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--hostname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"selenium\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> selenium\n      <span class=\"token punctuation\">-</span> app.local</code></pre></div>\n<p><em><strong>Note</strong>: This setup is only waiting for selenium to be “ready” as it’s the slowest of the two services.<br>\nWaiting on a condition like the above for multiple services (for example selenium on port 4444 and app.local on port 3000) is a problem for which I haven’t found an elegant solution yet, so there’s a tradeoff here (although a possible workaround can be found on <a href=\"https://github.com/vishnubob/wait-for-it/issues/2#issuecomment-193334505\">github</a>).</em></p>\n<h2 id=\"choose-a-specific-browserbrowser-version\" style=\"position:relative;\"><a href=\"#choose-a-specific-browserbrowser-version\" aria-label=\"choose a specific browserbrowser version permalink\" class=\"anchor before\"><svg height=\"20\" width=\"20\" viewBox=\"-32 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"/></svg></a>Choose a specific browser/browser version</h2>\n<p>Usually, tests need to target a specific browser version/make.</p>\n<p>To do this the <code class=\"language-text\">docker-compose</code> configuration can be tweaked to run a <a href=\"https://github.com/SeleniumHQ/selenium/wiki/Grid2\">Selenium grid</a> (hub) and have different browsers connect to it.</p>\n<p>The grid can:</p>\n<ul>\n<li>scale by distributing tests on several machines ( <strong>parallel execution</strong> )</li>\n<li>manage multiple environments from a central point, <strong>making it easy to run the tests against a vast combination of browsers/OS</strong>.</li>\n<li>minimize the maintenance time for the grid by allowing you to implement custom hooks to leverage virtual infrastructure for instance.</li>\n</ul>\n<p>For now the second point is of more interest, but parallel execution is definitely a very nice to have feature.</p>\n<p>With the grid, we need at least one node (browser) that will connect to it and eventually run the tests.</p>\n<p>The configuration for Selenium looks like this at the moment:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">selenium</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/standalone<span class=\"token punctuation\">-</span>chrome\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4444\"</span>\n  <span class=\"token key atrule\">log_driver</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span></code></pre></div>\n<p>The new configuration, a bit more verbose:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">selenium-hub</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/hub<span class=\"token punctuation\">:</span>3.141.59<span class=\"token punctuation\">-</span>neon\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> selenium<span class=\"token punctuation\">-</span>hub\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4444\"</span>\n<span class=\"token key atrule\">chrome</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/node<span class=\"token punctuation\">-</span>chrome<span class=\"token punctuation\">:</span>3.141.59<span class=\"token punctuation\">-</span>neon\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /dev/shm<span class=\"token punctuation\">:</span>/dev/shm\n  <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> selenium<span class=\"token punctuation\">-</span>hub\n    <span class=\"token punctuation\">-</span> app.local\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> HUB_HOST=selenium<span class=\"token punctuation\">-</span>hub\n    <span class=\"token punctuation\">-</span> HUB_PORT=4444\n    <span class=\"token punctuation\">-</span> CHROME_VERSION=62.0.3202.94</code></pre></div>\n<p>The <code class=\"language-text\">selenium-hub</code> container will accept connections from the nodes.<br>\nThe <code class=\"language-text\">chrome</code> container depends on <code class=\"language-text\">selenium-hub</code>.<br>\nA link to the <code class=\"language-text\">tests</code> container is added so that this container (chrome) can talk to the application.<br>\nThe grid’s hostname and port can be specified through environment variables (<code class=\"language-text\">HUB_HOST=selenium-hub</code>, <code class=\"language-text\">HUB_PORT=4444</code>), same for the browser’s version required (<code class=\"language-text\">CHROME_VERSION=62.0.3202.94</code>).</p>\n<p>The new <code class=\"language-text\">docker-compose</code> file, including all the improvements so far:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">app.local</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> npm start\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"3000\"</span>\n\n<span class=\"token key atrule\">tests</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> integration<span class=\"token punctuation\">-</span>tests<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_COUNTER<span class=\"token punctuation\">:</span><span class=\"token number\">-0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./wait-for-it.sh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"selenium-hub:4444\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--hostname\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"selenium-hub\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> selenium<span class=\"token punctuation\">-</span>hub\n    <span class=\"token punctuation\">-</span> app.local\n\n<span class=\"token key atrule\">selenium-hub</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/hub<span class=\"token punctuation\">:</span>3.141.59<span class=\"token punctuation\">-</span>neon\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> selenium<span class=\"token punctuation\">-</span>hub\n  <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4444\"</span>\n\n<span class=\"token key atrule\">chrome</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> selenium/node<span class=\"token punctuation\">-</span>chrome<span class=\"token punctuation\">:</span>3.141.59<span class=\"token punctuation\">-</span>neon\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> /dev/shm<span class=\"token punctuation\">:</span>/dev/shm\n  <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> selenium<span class=\"token punctuation\">-</span>hub\n    <span class=\"token punctuation\">-</span> app.local\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> HUB_HOST=selenium<span class=\"token punctuation\">-</span>hub\n    <span class=\"token punctuation\">-</span> HUB_PORT=4444\n    <span class=\"token punctuation\">-</span> CHROME_VERSION=google<span class=\"token punctuation\">-</span>chrome<span class=\"token punctuation\">-</span>stable</code></pre></div>\n<p><em><strong>Note</strong>: I added versions to the docker images to make sure new releases don’t break the example :)<br>\nAlso note that the name <code class=\"language-text\">app.local</code> was chosen because Chrome tends to redirect non-local domains to https. To prevent this from happening I added the <code class=\"language-text\">.local</code> domain to the dns name.</em></p>\n<h2 id=\"stop-the-container-when-the-tests-are-completed-and-report-the-right-exit-code-to-ci\" style=\"position:relative;\"><a href=\"#stop-the-container-when-the-tests-are-completed-and-report-the-right-exit-code-to-ci\" aria-label=\"stop the container when the tests are completed and report the right exit code to ci permalink\" class=\"anchor before\"><svg height=\"20\" width=\"20\" viewBox=\"-32 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"/></svg></a>Stop the container when the tests are completed and report the right exit code to CI</h2>\n<p>The current configuration starts up all the containers in order, runs the tests with a specific browser, but never stops the container because <code class=\"language-text\">selenium-hub</code> and <code class=\"language-text\">app.local</code> are long running processes that listen on a port forever.<br>\nRegardless of when the tests are completed, these services will keep listening and never return: <strong>the CI process will therefore never complete</strong>.</p>\n<p>All the containers need to be stopped when the tests are completed, the exit code from the <code class=\"language-text\">tests</code> container taken and returned to the CI, so that it can mark the build as passing or failing.</p>\n<p><code class=\"language-text\">docker-compose</code> accepts <code class=\"language-text\">--abort-on-container-exit</code> and <code class=\"language-text\">--exit-code-from SERVICE</code>:</p>\n<ul>\n<li><code class=\"language-text\">--abort-on-container-exit</code> stops all containers if any container was stopped.</li>\n<li><code class=\"language-text\">--exit-code-from SERVICE</code> return the exit code of the selected <code class=\"language-text\">SERVICE</code> container. Implies <code class=\"language-text\">--abort-on-container-exit</code>.</li>\n</ul>\n<p>The bash script can be now modified to include these two options:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Starting Docker build\"</span>\n\n<span class=\"token assign-left variable\">DOCKER_IMAGE</span><span class=\"token operator\">=</span><span class=\"token string\">\"integration-tests:<span class=\"token variable\">${BUILD_COUNTER<span class=\"token operator\">:-</span>0}</span>\"</span>\n\n<span class=\"token builtin class-name\">echo</span> DOCKER_IMAGE: <span class=\"token variable\">${DOCKER_IMAGE}</span>\n\n<span class=\"token function\">docker</span> build --rm -t <span class=\"token variable\">${DOCKER_IMAGE}</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker-compose</span> up --exit-code-from tests\n<span class=\"token function\">docker-compose</span> down</code></pre></div>\n<p><em><strong>Note</strong>: I added <code class=\"language-text\">docker-compose down</code> to cleanup after everything’s done.</em></p>\n<h2 id=\"conclusions\" style=\"position:relative;\"><a href=\"#conclusions\" aria-label=\"conclusions permalink\" class=\"anchor before\"><svg height=\"20\" width=\"20\" viewBox=\"-32 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"/></svg></a>Conclusions</h2>\n<p>Making the tests execution more reliable and flexible helps a lot with achieving that confidence that is so needed when it comes to functional/e2e tests being used as gatekeepers to production.</p>\n<p>Part III will look into debugging during execution using the browser running inside the container and saving reports on the CI to be used for port-mortem analysis.</p>\n<p>You can find a working version of this example on <a href=\"https://github.com/ricca509/dockerize-webdriverio/tree/part-2\">Github</a>.</p>\n<p>Happy hacking!</p>","frontmatter":{"title":"Dockerize your tests to run everywhere - Part II","date":"December 01, 2018","description":"Dockerize your tests to run everywhere - Part II"}},"previous":{"fields":{"slug":"/blog/snapshot-testing-and-why-it-makes-sense/"},"frontmatter":{"title":"Snapshot testing and why it makes sense"}},"next":{"fields":{"slug":"/blog/it-contracting-how-to-get-started/"},"frontmatter":{"title":"IT contracting: how to get started"}}},"pageContext":{"id":"ccd6ca38-c948-5b83-a06a-ede8dcaa1fa7","previousPostId":"1cac76ed-bd07-51b7-8ce5-9bcd80cfb455","nextPostId":"a8d91a9d-a0df-5f43-8b0e-74153135a20f"}},
    "staticQueryHashes": ["2841359383"]}